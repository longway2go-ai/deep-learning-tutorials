{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyOVlYucjzvGXYF0WbYMXTto"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"Z9EDIxZAnx9l","executionInfo":{"status":"ok","timestamp":1751207712631,"user_tz":-330,"elapsed":7782,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import tensorflow as tf"]},{"cell_type":"code","source":["print(tf.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TSN-c4bgqH04","executionInfo":{"status":"ok","timestamp":1751207715457,"user_tz":-330,"elapsed":33,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"da5c9e77-99e4-4f23-8c7e-66878183d060"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["2.18.0\n"]}]},{"cell_type":"code","source":["df=pd.read_csv('/content/Churn_Modelling.csv')"],"metadata":{"id":"QXDXTC1bnyx_","executionInfo":{"status":"ok","timestamp":1751207726304,"user_tz":-330,"elapsed":82,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"1SBrBuPBny0Z","executionInfo":{"status":"ok","timestamp":1751207729499,"user_tz":-330,"elapsed":88,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"e375df7b-b603-4304-c669-6d768fc87013"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n","0          1    15634602  Hargrave          619    France  Female   42   \n","1          2    15647311      Hill          608     Spain  Female   41   \n","2          3    15619304      Onio          502    France  Female   42   \n","3          4    15701354      Boni          699    France  Female   39   \n","4          5    15737888  Mitchell          850     Spain  Female   43   \n","\n","   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n","0       2       0.00              1          1               1   \n","1       1   83807.86              1          0               1   \n","2       8  159660.80              3          1               0   \n","3       1       0.00              2          0               0   \n","4       2  125510.82              1          1               1   \n","\n","   EstimatedSalary  Exited  \n","0        101348.88       1  \n","1        112542.58       0  \n","2        113931.57       1  \n","3         93826.63       0  \n","4         79084.10       0  "],"text/html":["\n","  <div id=\"df-664c144a-67cd-4d4a-a7eb-2f5514c4753f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RowNumber</th>\n","      <th>CustomerId</th>\n","      <th>Surname</th>\n","      <th>CreditScore</th>\n","      <th>Geography</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>15634602</td>\n","      <td>Hargrave</td>\n","      <td>619</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>15647311</td>\n","      <td>Hill</td>\n","      <td>608</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>15619304</td>\n","      <td>Onio</td>\n","      <td>502</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>15701354</td>\n","      <td>Boni</td>\n","      <td>699</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>15737888</td>\n","      <td>Mitchell</td>\n","      <td>850</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-664c144a-67cd-4d4a-a7eb-2f5514c4753f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-664c144a-67cd-4d4a-a7eb-2f5514c4753f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-664c144a-67cd-4d4a-a7eb-2f5514c4753f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7787d14e-7266-4a22-8d70-9117545068a0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7787d14e-7266-4a22-8d70-9117545068a0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7787d14e-7266-4a22-8d70-9117545068a0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"RowNumber\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2886,\n        \"min\": 1,\n        \"max\": 10000,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          6253,\n          4685,\n          1732\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustomerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 71936,\n        \"min\": 15565701,\n        \"max\": 15815690,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          15687492,\n          15736963,\n          15721730\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2932,\n        \"samples\": [\n          \"McGuirk\",\n          \"Torkelson\",\n          \"Rapuluchukwu\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CreditScore\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 96,\n        \"min\": 350,\n        \"max\": 850,\n        \"num_unique_values\": 460,\n        \"samples\": [\n          754,\n          533,\n          744\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Geography\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"France\",\n          \"Spain\",\n          \"Germany\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 18,\n        \"max\": 92,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          61,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          6,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62397.40520238623,\n        \"min\": 0.0,\n        \"max\": 250898.09,\n        \"num_unique_values\": 6382,\n        \"samples\": [\n          117707.18,\n          133050.97\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumOfProducts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasCrCard\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsActiveMember\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EstimatedSalary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57510.49281769822,\n        \"min\": 11.58,\n        \"max\": 199992.48,\n        \"num_unique_values\": 9999,\n        \"samples\": [\n          100809.99,\n          95273.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exited\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["x=df.iloc[:,3:13]\n","y=df.iloc[:,13]"],"metadata":{"id":"I2cwms82ny1o","executionInfo":{"status":"ok","timestamp":1751207732092,"user_tz":-330,"elapsed":41,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["geography=pd.get_dummies(x['Geography']) #one hot endcoding can assure 1 to True, rest as 0\n","gender=pd.get_dummies(x['Gender'])"],"metadata":{"id":"K61Ysb20ny3f","executionInfo":{"status":"ok","timestamp":1751207742881,"user_tz":-330,"elapsed":28,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["x.drop(['Geography','Gender'],axis=1,inplace=True)"],"metadata":{"id":"5gQY9pduny5W","executionInfo":{"status":"ok","timestamp":1751207747220,"user_tz":-330,"elapsed":23,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["x=pd.concat([x,geography,gender],axis=1)"],"metadata":{"id":"aDi4kaOntKYf","executionInfo":{"status":"ok","timestamp":1751207749127,"user_tz":-330,"elapsed":22,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["x.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"kvE5WMWrny91","executionInfo":{"status":"ok","timestamp":1751207751230,"user_tz":-330,"elapsed":44,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"3ff17856-6e5a-4fc4-f9fe-d4c54e5c3770"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CreditScore  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n","0          619   42       2       0.00              1          1   \n","1          608   41       1   83807.86              1          0   \n","2          502   42       8  159660.80              3          1   \n","3          699   39       1       0.00              2          0   \n","4          850   43       2  125510.82              1          1   \n","\n","   IsActiveMember  EstimatedSalary  France  Germany  Spain  Female   Male  \n","0               1        101348.88    True    False  False    True  False  \n","1               1        112542.58   False    False   True    True  False  \n","2               0        113931.57    True    False  False    True  False  \n","3               0         93826.63    True    False  False    True  False  \n","4               1         79084.10   False    False   True    True  False  "],"text/html":["\n","  <div id=\"df-3e4c8839-636c-4669-8ab5-61274faaa071\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>France</th>\n","      <th>Germany</th>\n","      <th>Spain</th>\n","      <th>Female</th>\n","      <th>Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>619</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>502</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>699</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>850</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e4c8839-636c-4669-8ab5-61274faaa071')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e4c8839-636c-4669-8ab5-61274faaa071 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e4c8839-636c-4669-8ab5-61274faaa071');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-46787397-22f2-415c-a579-4ce5d957346f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46787397-22f2-415c-a579-4ce5d957346f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-46787397-22f2-415c-a579-4ce5d957346f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x","summary":"{\n  \"name\": \"x\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"CreditScore\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 96,\n        \"min\": 350,\n        \"max\": 850,\n        \"num_unique_values\": 460,\n        \"samples\": [\n          754,\n          533,\n          744\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 18,\n        \"max\": 92,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          61,\n          42,\n          59\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          6,\n          2,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62397.40520238623,\n        \"min\": 0.0,\n        \"max\": 250898.09,\n        \"num_unique_values\": 6382,\n        \"samples\": [\n          117707.18,\n          133050.97,\n          124271.26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumOfProducts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasCrCard\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsActiveMember\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EstimatedSalary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57510.49281769822,\n        \"min\": 11.58,\n        \"max\": 199992.48,\n        \"num_unique_values\": 9999,\n        \"samples\": [\n          100809.99,\n          95273.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"France\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Germany\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spain\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Female\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Male\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)"],"metadata":{"id":"sFER4FRmnzDe","executionInfo":{"status":"ok","timestamp":1751207754667,"user_tz":-330,"elapsed":247,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["x_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aySmLrl7nzFp","executionInfo":{"status":"ok","timestamp":1751207757127,"user_tz":-330,"elapsed":26,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"11f4fa81-04b1-4b6a-cb5c-c3d888838167"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(8000, 13)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","\n","sc=StandardScaler()\n","x_train=sc.fit_transform(x_train)\n","x_test=sc.transform(x_test)"],"metadata":{"id":"u_7Fl5nfnzHh","executionInfo":{"status":"ok","timestamp":1751207758668,"user_tz":-330,"elapsed":28,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras.layers import LeakyReLU,ELU,ReLU\n","from tensorflow.keras.layers import Dropout\n","from tensorflow.keras.callbacks import EarlyStopping"],"metadata":{"id":"AWANvVmvnzJk","executionInfo":{"status":"ok","timestamp":1751207762862,"user_tz":-330,"elapsed":65,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["model=Sequential([\n","    Dense(units=13,activation='relu'),\n","    Dropout(0.3),\n","    Dense(units=7,activation='relu'),\n","    Dropout(0.2),\n","    Dense(units=6,activation='relu'),\n","    Dense(units=1,activation='sigmoid')\n","])"],"metadata":{"id":"NnCZwYMWnzLr","executionInfo":{"status":"ok","timestamp":1751207767268,"user_tz":-330,"elapsed":223,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])"],"metadata":{"id":"KIMrSLmhnzNn","executionInfo":{"status":"ok","timestamp":1751207775932,"user_tz":-330,"elapsed":31,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["#import tensorflow\n","#optm=tensorflow.keras.optimizers.Adam(learning_rate=0.01)"],"metadata":{"id":"9ZfoPrDvnzQt","executionInfo":{"status":"ok","timestamp":1751202304457,"user_tz":-330,"elapsed":17,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["early_stop=EarlyStopping(\n","    monitor=\"val_loss\",\n","    min_delta=0.0001,\n","    patience=30,\n","    verbose=1,\n","    mode=\"auto\",\n","    baseline=None,\n","    restore_best_weights=False,\n","    start_from_epoch=0,\n",")"],"metadata":{"id":"UAASCjEh4nx1","executionInfo":{"status":"ok","timestamp":1751207779470,"user_tz":-330,"elapsed":2,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["model_history=model.fit(x_train,y_train,validation_split=0.33,batch_size=10,epochs=1000,callbacks=[early_stop] )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5O1QiIzJyv8w","executionInfo":{"status":"ok","timestamp":1751208088911,"user_tz":-330,"elapsed":288384,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"319b86e7-c576-49f0-9aed-45e0384559eb"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 8ms/step - accuracy: 0.7169 - loss: 0.5877 - val_accuracy: 0.7955 - val_loss: 0.4708\n","Epoch 2/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.7976 - loss: 0.4817 - val_accuracy: 0.7967 - val_loss: 0.4551\n","Epoch 3/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - accuracy: 0.8008 - loss: 0.4539 - val_accuracy: 0.8020 - val_loss: 0.4452\n","Epoch 4/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 3ms/step - accuracy: 0.7890 - loss: 0.4597 - val_accuracy: 0.8027 - val_loss: 0.4402\n","Epoch 5/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3ms/step - accuracy: 0.8024 - loss: 0.4499 - val_accuracy: 0.8107 - val_loss: 0.4337\n","Epoch 6/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8005 - loss: 0.4460 - val_accuracy: 0.8175 - val_loss: 0.4282\n","Epoch 7/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8076 - loss: 0.4300 - val_accuracy: 0.8160 - val_loss: 0.4213\n","Epoch 8/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8260 - loss: 0.4156 - val_accuracy: 0.8251 - val_loss: 0.4127\n","Epoch 9/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8292 - loss: 0.4044 - val_accuracy: 0.8292 - val_loss: 0.4079\n","Epoch 10/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8229 - loss: 0.4114 - val_accuracy: 0.8311 - val_loss: 0.3990\n","Epoch 11/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3ms/step - accuracy: 0.8383 - loss: 0.3929 - val_accuracy: 0.8372 - val_loss: 0.3900\n","Epoch 12/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8357 - loss: 0.3974 - val_accuracy: 0.8436 - val_loss: 0.3818\n","Epoch 13/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 6ms/step - accuracy: 0.8409 - loss: 0.3842 - val_accuracy: 0.8455 - val_loss: 0.3777\n","Epoch 14/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8399 - loss: 0.3816 - val_accuracy: 0.8429 - val_loss: 0.3739\n","Epoch 15/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8405 - loss: 0.3821 - val_accuracy: 0.8406 - val_loss: 0.3731\n","Epoch 16/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8247 - loss: 0.4028 - val_accuracy: 0.8425 - val_loss: 0.3730\n","Epoch 17/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8351 - loss: 0.3827 - val_accuracy: 0.8421 - val_loss: 0.3732\n","Epoch 18/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8440 - loss: 0.3769 - val_accuracy: 0.8425 - val_loss: 0.3725\n","Epoch 19/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8467 - loss: 0.3773 - val_accuracy: 0.8432 - val_loss: 0.3687\n","Epoch 20/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3ms/step - accuracy: 0.8371 - loss: 0.3806 - val_accuracy: 0.8413 - val_loss: 0.3705\n","Epoch 21/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8478 - loss: 0.3722 - val_accuracy: 0.8455 - val_loss: 0.3681\n","Epoch 22/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8359 - loss: 0.3816 - val_accuracy: 0.8440 - val_loss: 0.3658\n","Epoch 23/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 5ms/step - accuracy: 0.8367 - loss: 0.3838 - val_accuracy: 0.8466 - val_loss: 0.3645\n","Epoch 24/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8372 - loss: 0.3816 - val_accuracy: 0.8463 - val_loss: 0.3669\n","Epoch 25/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8278 - loss: 0.3831 - val_accuracy: 0.8451 - val_loss: 0.3656\n","Epoch 26/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 5ms/step - accuracy: 0.8403 - loss: 0.3816 - val_accuracy: 0.8478 - val_loss: 0.3647\n","Epoch 27/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 4ms/step - accuracy: 0.8419 - loss: 0.3729 - val_accuracy: 0.8501 - val_loss: 0.3626\n","Epoch 28/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8484 - loss: 0.3546 - val_accuracy: 0.8489 - val_loss: 0.3620\n","Epoch 29/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3ms/step - accuracy: 0.8433 - loss: 0.3693 - val_accuracy: 0.8493 - val_loss: 0.3633\n","Epoch 30/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8363 - loss: 0.3775 - val_accuracy: 0.8466 - val_loss: 0.3644\n","Epoch 31/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8414 - loss: 0.3709 - val_accuracy: 0.8478 - val_loss: 0.3620\n","Epoch 32/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 5ms/step - accuracy: 0.8463 - loss: 0.3644 - val_accuracy: 0.8463 - val_loss: 0.3610\n","Epoch 33/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8389 - loss: 0.3643 - val_accuracy: 0.8497 - val_loss: 0.3620\n","Epoch 34/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8459 - loss: 0.3565 - val_accuracy: 0.8535 - val_loss: 0.3607\n","Epoch 35/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8451 - loss: 0.3623 - val_accuracy: 0.8519 - val_loss: 0.3616\n","Epoch 36/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8484 - loss: 0.3554 - val_accuracy: 0.8523 - val_loss: 0.3603\n","Epoch 37/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 5ms/step - accuracy: 0.8471 - loss: 0.3569 - val_accuracy: 0.8512 - val_loss: 0.3669\n","Epoch 38/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8477 - loss: 0.3695 - val_accuracy: 0.8497 - val_loss: 0.3609\n","Epoch 39/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8456 - loss: 0.3618 - val_accuracy: 0.8501 - val_loss: 0.3607\n","Epoch 40/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8508 - loss: 0.3646 - val_accuracy: 0.8489 - val_loss: 0.3597\n","Epoch 41/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8479 - loss: 0.3596 - val_accuracy: 0.8516 - val_loss: 0.3600\n","Epoch 42/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8453 - loss: 0.3700 - val_accuracy: 0.8516 - val_loss: 0.3574\n","Epoch 43/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 5ms/step - accuracy: 0.8425 - loss: 0.3674 - val_accuracy: 0.8519 - val_loss: 0.3606\n","Epoch 44/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8354 - loss: 0.3702 - val_accuracy: 0.8501 - val_loss: 0.3600\n","Epoch 45/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8542 - loss: 0.3459 - val_accuracy: 0.8546 - val_loss: 0.3579\n","Epoch 46/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8473 - loss: 0.3575 - val_accuracy: 0.8538 - val_loss: 0.3575\n","Epoch 47/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8396 - loss: 0.3692 - val_accuracy: 0.8501 - val_loss: 0.3612\n","Epoch 48/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8491 - loss: 0.3581 - val_accuracy: 0.8542 - val_loss: 0.3595\n","Epoch 49/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8408 - loss: 0.3668 - val_accuracy: 0.8519 - val_loss: 0.3599\n","Epoch 50/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8435 - loss: 0.3699 - val_accuracy: 0.8538 - val_loss: 0.3596\n","Epoch 51/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8504 - loss: 0.3609 - val_accuracy: 0.8523 - val_loss: 0.3607\n","Epoch 52/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8511 - loss: 0.3546 - val_accuracy: 0.8573 - val_loss: 0.3588\n","Epoch 53/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8608 - loss: 0.3468 - val_accuracy: 0.8550 - val_loss: 0.3604\n","Epoch 54/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8583 - loss: 0.3433 - val_accuracy: 0.8565 - val_loss: 0.3577\n","Epoch 55/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8691 - loss: 0.3366 - val_accuracy: 0.8565 - val_loss: 0.3558\n","Epoch 56/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8489 - loss: 0.3653 - val_accuracy: 0.8557 - val_loss: 0.3547\n","Epoch 57/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8485 - loss: 0.3526 - val_accuracy: 0.8557 - val_loss: 0.3606\n","Epoch 58/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8497 - loss: 0.3625 - val_accuracy: 0.8538 - val_loss: 0.3575\n","Epoch 59/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3ms/step - accuracy: 0.8611 - loss: 0.3509 - val_accuracy: 0.8538 - val_loss: 0.3563\n","Epoch 60/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - accuracy: 0.8595 - loss: 0.3448 - val_accuracy: 0.8538 - val_loss: 0.3564\n","Epoch 61/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8447 - loss: 0.3712 - val_accuracy: 0.8546 - val_loss: 0.3560\n","Epoch 62/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8497 - loss: 0.3564 - val_accuracy: 0.8550 - val_loss: 0.3557\n","Epoch 63/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3ms/step - accuracy: 0.8499 - loss: 0.3565 - val_accuracy: 0.8550 - val_loss: 0.3571\n","Epoch 64/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8505 - loss: 0.3565 - val_accuracy: 0.8550 - val_loss: 0.3556\n","Epoch 65/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - accuracy: 0.8491 - loss: 0.3568 - val_accuracy: 0.8554 - val_loss: 0.3565\n","Epoch 66/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8446 - loss: 0.3625 - val_accuracy: 0.8557 - val_loss: 0.3571\n","Epoch 67/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8365 - loss: 0.3687 - val_accuracy: 0.8535 - val_loss: 0.3589\n","Epoch 68/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8569 - loss: 0.3477 - val_accuracy: 0.8546 - val_loss: 0.3586\n","Epoch 69/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8485 - loss: 0.3708 - val_accuracy: 0.8508 - val_loss: 0.3590\n","Epoch 70/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8541 - loss: 0.3539 - val_accuracy: 0.8538 - val_loss: 0.3631\n","Epoch 71/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8531 - loss: 0.3545 - val_accuracy: 0.8546 - val_loss: 0.3599\n","Epoch 72/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8535 - loss: 0.3573 - val_accuracy: 0.8542 - val_loss: 0.3594\n","Epoch 73/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8484 - loss: 0.3644 - val_accuracy: 0.8546 - val_loss: 0.3609\n","Epoch 74/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8467 - loss: 0.3654 - val_accuracy: 0.8523 - val_loss: 0.3583\n","Epoch 75/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3ms/step - accuracy: 0.8462 - loss: 0.3671 - val_accuracy: 0.8542 - val_loss: 0.3559\n","Epoch 76/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 5ms/step - accuracy: 0.8621 - loss: 0.3373 - val_accuracy: 0.8535 - val_loss: 0.3578\n","Epoch 77/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8405 - loss: 0.3677 - val_accuracy: 0.8535 - val_loss: 0.3557\n","Epoch 78/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8562 - loss: 0.3455 - val_accuracy: 0.8501 - val_loss: 0.3588\n","Epoch 79/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8629 - loss: 0.3419 - val_accuracy: 0.8546 - val_loss: 0.3562\n","Epoch 80/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8530 - loss: 0.3488 - val_accuracy: 0.8565 - val_loss: 0.3573\n","Epoch 81/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8449 - loss: 0.3593 - val_accuracy: 0.8523 - val_loss: 0.3564\n","Epoch 82/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 5ms/step - accuracy: 0.8477 - loss: 0.3602 - val_accuracy: 0.8557 - val_loss: 0.3543\n","Epoch 83/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8517 - loss: 0.3509 - val_accuracy: 0.8554 - val_loss: 0.3542\n","Epoch 84/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8598 - loss: 0.3424 - val_accuracy: 0.8550 - val_loss: 0.3601\n","Epoch 85/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8530 - loss: 0.3602 - val_accuracy: 0.8542 - val_loss: 0.3572\n","Epoch 86/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8545 - loss: 0.3556 - val_accuracy: 0.8535 - val_loss: 0.3570\n","Epoch 87/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 5ms/step - accuracy: 0.8498 - loss: 0.3526 - val_accuracy: 0.8531 - val_loss: 0.3564\n","Epoch 88/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8492 - loss: 0.3715 - val_accuracy: 0.8531 - val_loss: 0.3554\n","Epoch 89/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8583 - loss: 0.3483 - val_accuracy: 0.8523 - val_loss: 0.3581\n","Epoch 90/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8605 - loss: 0.3459 - val_accuracy: 0.8519 - val_loss: 0.3593\n","Epoch 91/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8462 - loss: 0.3645 - val_accuracy: 0.8519 - val_loss: 0.3560\n","Epoch 92/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8536 - loss: 0.3438 - val_accuracy: 0.8542 - val_loss: 0.3620\n","Epoch 93/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8539 - loss: 0.3574 - val_accuracy: 0.8561 - val_loss: 0.3537\n","Epoch 94/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8554 - loss: 0.3510 - val_accuracy: 0.8546 - val_loss: 0.3557\n","Epoch 95/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8567 - loss: 0.3390 - val_accuracy: 0.8542 - val_loss: 0.3546\n","Epoch 96/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8626 - loss: 0.3476 - val_accuracy: 0.8523 - val_loss: 0.3542\n","Epoch 97/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8540 - loss: 0.3503 - val_accuracy: 0.8527 - val_loss: 0.3553\n","Epoch 98/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 5ms/step - accuracy: 0.8595 - loss: 0.3454 - val_accuracy: 0.8535 - val_loss: 0.3568\n","Epoch 99/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8578 - loss: 0.3450 - val_accuracy: 0.8523 - val_loss: 0.3593\n","Epoch 100/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8625 - loss: 0.3446 - val_accuracy: 0.8519 - val_loss: 0.3567\n","Epoch 101/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3ms/step - accuracy: 0.8512 - loss: 0.3644 - val_accuracy: 0.8531 - val_loss: 0.3586\n","Epoch 102/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8552 - loss: 0.3610 - val_accuracy: 0.8531 - val_loss: 0.3560\n","Epoch 103/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8533 - loss: 0.3423 - val_accuracy: 0.8523 - val_loss: 0.3580\n","Epoch 104/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8505 - loss: 0.3713 - val_accuracy: 0.8538 - val_loss: 0.3560\n","Epoch 105/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8531 - loss: 0.3578 - val_accuracy: 0.8531 - val_loss: 0.3565\n","Epoch 106/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8476 - loss: 0.3540 - val_accuracy: 0.8512 - val_loss: 0.3564\n","Epoch 107/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8510 - loss: 0.3608 - val_accuracy: 0.8573 - val_loss: 0.3558\n","Epoch 108/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8484 - loss: 0.3545 - val_accuracy: 0.8546 - val_loss: 0.3593\n","Epoch 109/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8571 - loss: 0.3512 - val_accuracy: 0.8561 - val_loss: 0.3541\n","Epoch 110/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8510 - loss: 0.3568 - val_accuracy: 0.8542 - val_loss: 0.3564\n","Epoch 111/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8587 - loss: 0.3447 - val_accuracy: 0.8561 - val_loss: 0.3591\n","Epoch 112/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8555 - loss: 0.3525 - val_accuracy: 0.8527 - val_loss: 0.3566\n","Epoch 113/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8524 - loss: 0.3631 - val_accuracy: 0.8531 - val_loss: 0.3557\n","Epoch 114/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 5ms/step - accuracy: 0.8646 - loss: 0.3387 - val_accuracy: 0.8561 - val_loss: 0.3550\n","Epoch 115/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8517 - loss: 0.3477 - val_accuracy: 0.8561 - val_loss: 0.3573\n","Epoch 116/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8486 - loss: 0.3576 - val_accuracy: 0.8569 - val_loss: 0.3554\n","Epoch 117/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8618 - loss: 0.3475 - val_accuracy: 0.8535 - val_loss: 0.3603\n","Epoch 118/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8575 - loss: 0.3519 - val_accuracy: 0.8542 - val_loss: 0.3570\n","Epoch 119/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8578 - loss: 0.3488 - val_accuracy: 0.8546 - val_loss: 0.3554\n","Epoch 120/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 4ms/step - accuracy: 0.8524 - loss: 0.3554 - val_accuracy: 0.8519 - val_loss: 0.3567\n","Epoch 121/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8448 - loss: 0.3654 - val_accuracy: 0.8538 - val_loss: 0.3566\n","Epoch 122/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - accuracy: 0.8634 - loss: 0.3335 - val_accuracy: 0.8538 - val_loss: 0.3567\n","Epoch 123/1000\n","\u001b[1m536/536\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 3ms/step - accuracy: 0.8528 - loss: 0.3516 - val_accuracy: 0.8512 - val_loss: 0.3572\n","Epoch 123: early stopping\n"]}]},{"cell_type":"code","source":["model.get_weights()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JR8Wk4TP_KC0","executionInfo":{"status":"ok","timestamp":1751208094436,"user_tz":-330,"elapsed":59,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"58120c45-4d38-4349-b6c7-1c379b416699"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[array([[-5.84903359e-02,  2.13983074e-01, -9.55057144e-02,\n","         -7.36628547e-02,  1.60521716e-02,  1.38639197e-01,\n","         -7.10234642e-02, -5.11993207e-02,  1.79435998e-01,\n","         -5.92202842e-02, -1.22031622e-01, -4.77966008e-04,\n","         -1.58033043e-01],\n","        [ 3.44241597e-02, -9.50102985e-01,  2.56035835e-01,\n","         -9.46731508e-01,  7.10062444e-01, -1.14654303e+00,\n","          1.40374824e-01,  4.48618889e-01, -1.17173636e+00,\n","          2.58473843e-01,  8.21599960e-02, -6.87039375e-01,\n","         -2.21751407e-01],\n","        [-1.42379962e-02,  4.09648418e-02,  6.36478001e-03,\n","         -4.99624908e-02,  5.05225621e-02, -4.05121259e-02,\n","          4.11811769e-01, -3.08147562e-03,  1.46099981e-02,\n","          6.74015610e-05,  1.35188717e-02,  1.11749448e-01,\n","          1.25766508e-02],\n","        [ 2.42221102e-01, -3.56722414e-01, -7.11049616e-01,\n","         -1.96058273e-01, -6.77202120e-02, -1.75410002e-01,\n","         -2.51234353e-01, -9.63126644e-02, -1.22908406e-01,\n","          1.61978737e-01,  2.95729995e-01, -9.87427458e-02,\n","         -2.82819569e-01],\n","        [ 1.16069114e+00,  2.71948099e-01, -1.09897983e+00,\n","          3.91782433e-01,  7.66353235e-02,  1.84127495e-01,\n","          1.92021042e-01, -1.82520583e-01, -2.33796816e-02,\n","          9.00075018e-01,  9.41543460e-01,  4.13411766e-01,\n","          8.51819515e-01],\n","        [-1.26125351e-01, -1.74753353e-01,  3.30069885e-02,\n","          9.97543614e-03, -6.77775815e-02,  4.15542759e-02,\n","          2.58126974e-01, -7.91005269e-02, -1.37734756e-01,\n","         -3.74669116e-03,  8.72933399e-03,  1.20728560e-01,\n","          1.36773000e-02],\n","        [ 1.90110411e-02,  1.39305860e-01, -1.22531585e-01,\n","          1.88906342e-01,  3.21190774e-01,  7.26116747e-02,\n","          8.72642457e-01, -7.74778903e-01,  8.67839530e-02,\n","         -3.05828452e-01, -1.42419547e-01,  3.36472541e-01,\n","          1.79044753e-01],\n","        [ 2.38989182e-02,  3.27328332e-02,  6.17556609e-02,\n","          1.54011816e-01, -6.02414319e-03, -1.21768229e-01,\n","         -1.15278386e-01,  5.72568402e-02, -8.97639245e-02,\n","         -3.58224362e-02,  9.15106684e-02, -7.08232671e-02,\n","         -4.94451746e-02],\n","        [ 1.08584180e-01,  3.44663918e-01, -3.55737358e-01,\n","          4.80326079e-02,  3.60689074e-01,  5.68304598e-01,\n","         -9.76577327e-02, -1.78616345e-01,  2.87016034e-01,\n","          3.49543124e-01, -2.32295856e-01,  4.08035889e-02,\n","          9.80644226e-02],\n","        [ 3.38236801e-02, -6.05446026e-02,  1.59889251e-01,\n","          4.05600555e-02,  2.92840719e-01,  1.00326017e-02,\n","         -2.80095339e-01, -9.06839743e-02,  2.51084361e-02,\n","          2.27764666e-01, -2.48391241e-01, -2.30838612e-01,\n","          6.54579625e-02],\n","        [ 2.88060188e-01,  2.09476873e-01, -3.54543447e-01,\n","          1.43936157e-01,  3.92297387e-01,  3.17111701e-01,\n","          1.28628567e-01, -1.44608706e-01, -4.72112477e-01,\n","          3.68408442e-01, -5.07290550e-02,  1.21001698e-01,\n","         -1.23831874e-03],\n","        [-3.99227925e-02, -4.03996140e-01,  3.19756597e-01,\n","         -1.55944556e-01,  1.51159540e-01, -1.12677328e-02,\n","         -1.68669194e-01,  3.80491406e-01,  2.83577949e-01,\n","         -3.64470690e-01,  2.18560137e-02, -7.16916695e-02,\n","         -1.81295037e-01],\n","        [-2.85698157e-02,  1.82463661e-01,  2.79072046e-01,\n","         -8.47940296e-02,  1.98594585e-01,  3.07567120e-01,\n","          1.42210007e-01,  3.93526047e-01,  2.75810361e-01,\n","         -3.39805394e-01, -1.34568244e-01,  9.82493684e-02,\n","         -2.44669482e-01]], dtype=float32),\n"," array([-1.3582946 ,  0.25102854, -0.6070643 ,  0.73724675, -1.367494  ,\n","         0.5950935 , -0.32293373, -1.1460321 ,  0.15683427, -1.3040247 ,\n","        -1.4809424 ,  0.5837766 , -0.09552822], dtype=float32),\n"," array([[ 0.41087624, -0.95537746, -0.78489023,  0.59834015, -1.1401643 ,\n","         -0.66634595,  0.03229538],\n","        [-0.14065719,  0.21951903,  0.16712795, -0.22735746,  0.31439614,\n","          0.2300402 , -1.2879139 ],\n","        [ 0.2985419 , -0.38960305, -0.42758337,  0.18602143, -1.1409341 ,\n","         -0.9510248 ,  0.0355279 ],\n","        [-0.05089326,  0.12422024,  0.04365825, -0.1256148 ,  0.14007474,\n","          0.02086099, -1.1696563 ],\n","        [-0.46886575,  0.8000399 ,  0.832231  , -0.5474235 ,  0.33425954,\n","         -0.64638364, -1.7835394 ],\n","        [-0.23906274, -0.12868965,  0.28412667, -0.5140288 ,  0.12788591,\n","          0.21836981, -1.3873768 ],\n","        [-0.04307187, -0.08640237,  0.1663209 , -0.19256353,  0.24988668,\n","          0.05717059, -0.88458204],\n","        [ 0.7977478 , -0.27131984, -0.7179574 ,  1.0918372 , -0.7851241 ,\n","         -0.323157  ,  0.4717843 ],\n","        [-0.46366793,  0.15577677,  0.12763314, -0.7931702 ,  0.0160332 ,\n","          0.10667559, -0.99224097],\n","        [ 1.2355846 , -1.581596  , -1.5408639 ,  1.1095961 , -2.1960945 ,\n","         -1.4676973 ,  0.869308  ],\n","        [ 1.4497671 , -1.4017149 , -1.6213496 ,  0.9685272 , -2.0697923 ,\n","         -1.3613282 ,  0.8471091 ],\n","        [-0.09397247,  0.3400934 ,  0.08279439, -0.16591029,  0.16718635,\n","          0.21511668, -1.0685192 ],\n","        [ 0.28158087,  0.35062394,  0.37083778,  0.14049755,  0.4401434 ,\n","          0.21540274, -0.5256908 ]], dtype=float32),\n"," array([-0.21623787,  0.04724039,  0.09057184, -0.06637356,  0.15894751,\n","         0.02607094,  0.33975422], dtype=float32),\n"," array([[-0.417207  ,  0.53254133, -0.40210435, -0.0285762 , -1.2538201 ,\n","         -1.0544331 ],\n","        [ 0.76225644,  0.40210775, -0.78678054,  0.18084818,  0.6352558 ,\n","          0.2963157 ],\n","        [ 0.20714694,  0.31259918,  0.8518431 ,  0.11732541,  0.19261204,\n","          0.1986714 ],\n","        [-1.1285777 , -0.80522645, -0.665138  ,  1.0067201 , -1.3741795 ,\n","         -1.3913817 ],\n","        [-1.03734   ,  0.20102115, -0.8217692 , -0.08712397,  0.3697922 ,\n","          0.80683   ],\n","        [ 0.62708634,  0.58666   ,  0.47728872,  0.16371192,  0.32340932,\n","          0.4785044 ],\n","        [-0.38515162,  1.4509712 , -0.2980077 ,  0.8855442 , -0.6761983 ,\n","         -0.74482787]], dtype=float32),\n"," array([ 0.15297514, -0.7115352 ,  0.0478292 , -0.16776651,  0.56043565,\n","         0.5534461 ], dtype=float32),\n"," array([[-0.72879183],\n","        [ 1.131687  ],\n","        [-0.464747  ],\n","        [ 0.8041529 ],\n","        [-0.5521319 ],\n","        [-1.1140485 ]], dtype=float32),\n"," array([0.21469656], dtype=float32)]"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["model_history.history.keys()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dtgC_9jZyv5Y","executionInfo":{"status":"ok","timestamp":1751208098526,"user_tz":-330,"elapsed":18,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"c88fcfe2-df37-45cf-81b0-02db64f1ec91"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_keys(['accuracy', 'loss', 'val_accuracy', 'val_loss'])"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["plt.plot(model_history.history['accuracy'])\n","plt.plot(model_history.history['val_accuracy'])\n","plt.title('model accuracy')\n","plt.ylabel('accuracy')\n","plt.xlabel('epoch')\n","plt.legend(['train','test'],loc='upper left')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"ewo--rsGyv3d","executionInfo":{"status":"ok","timestamp":1751208101683,"user_tz":-330,"elapsed":242,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"12bb9db6-6b37-4f7f-d5ce-4e80d49a34b2"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.plot(model_history.history['loss'])\n","plt.plot(model_history.history['val_loss'])\n","plt.title('model loss')\n","plt.ylabel('loss')\n","plt.xlabel('epoch')\n","plt.legend(['train','test'],loc='upper right')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"2vh0H5Khyv1v","executionInfo":{"status":"ok","timestamp":1751208107466,"user_tz":-330,"elapsed":359,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"97e139f4-9ba5-41a2-90b7-4b43e5fedf09"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["y_pred=model.predict(x_test)\n","y_pred=(y_pred > 0.5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cRSodOMcyvzy","executionInfo":{"status":"ok","timestamp":1751208112270,"user_tz":-330,"elapsed":1313,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"3c825408-c11f-47a1-b0bf-2c3402e09b4c"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix,accuracy_score\n","cm=confusion_matrix(y_test,y_pred)\n","ac=accuracy_score(y_test,y_pred)\n","print(cm)\n","print(f'Accuracy score:',ac)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ttFL4wLyvxR","executionInfo":{"status":"ok","timestamp":1751208114927,"user_tz":-330,"elapsed":23,"user":{"displayName":"CodeWithMe","userId":"00185162531246108097"}},"outputId":"af3225ad-2606-446d-c16c-481bc96fb22a"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1525   70]\n"," [ 207  198]]\n","Accuracy score: 0.8615\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"d2WxyyG9-8xR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"vmFqXBM6-8jo"},"execution_count":null,"outputs":[]}]}